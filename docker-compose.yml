version: "2.1"

services:

  apm-server:
    build: apm-server
    container_name: apm-server
    ports:
      - "127.0.0.1:${APM_SERVER_PORT:-8200}:8200"
      - "127.0.0.1:${APM_SERVER_MONITOR_PORT:-6060}:6060"
    command: >
      ./apm-server -e
        -E apm-server.frontend.enabled=true
        -E apm-server.frontend.rate_limit=100000
        -E apm-server.host=0.0.0.0:8200
        -E apm-server.read_timeout=1m
        -E apm-server.shutdown_timeout=2m
        -E apm-server.write_timeout=1m
        -E apm-server.rum.enabled=true
        -E setup.template.settings.index.number_of_replicas=0
        -E xpack.monitoring.elasticsearch=true
        -E cloud.id=${ELASTIC_CLOUD_ID}
        -E cloud.auth=${ELASTIC_CLOUD_CREDENTIALS}
        -E output.elasticsearch.enabled=${APM_SERVER_ELASTICSEARCH_OUTPUT_ENABLED:-true}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETGID
      - SETUID
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://apm-server:8200/"]
      retries: 10
      interval: 10s

  opbeans-java:
      build: opbeans-java
      container_name: opbeans-java
      ports:
        - "127.0.0.1:${OPBEANS_SERVER_PORT:-3000}:8000"
      logging:
        driver: 'json-file'
        options:
            max-size: '2m'
            max-file: '5'
      environment:
        - ELASTIC_APM_SERVICE_NAME=${ELASTIC_APM_SERVICE_NAME:-opbeans-java}
        - ELASTIC_APM_SERVER_URL=${ELASTIC_APM_SERVER_URL:-http://apm-server:8200}
        - ELASTIC_APM_APPLICATION_PACKAGES=co.elastic.apm.opbeans
        - ELASTIC_APM_JS_SERVER_URL=${ELASTIC_APM_JS_SERVER_URL:-http://localhost:8200}
        - OPBEANS_SERVER_PORT=${OPBEANS_SERVER_PORT:-8000}
        - ELASTIC_APM_ENABLE_LOG_CORRELATION=true
        - ELASTIC_APM_ENVIRONMENT=production
        - OTEL_RESOURCE_ATTRIBUTES=service.name=${ELASTIC_APM_SERVICE_NAME:-opbeans-java},deployment.environment=production
        - OTEL_TRACES_EXPORTER=otlp
        - OTEL_METRICS_EXPORTER=otlp
        - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT:-http://apm-server:8200}
        - OTEL_EXPORTER_OTLP_PROTOCOL=${OTEL_EXPORTER_OTLP_PROTOCOL:-grpc}
        - APM_AGENT_TYPE=${APM_AGENT_TYPE:-elasticapm}
      depends_on:
        apm-server:
          condition: service_healthy
      healthcheck:
        test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://opbeans-java:8000/"]
        interval: 10s
        retries: 10

  opbeans-dotnet:
    build: opbeans-dotnet
    ports:
      - "127.0.0.1:${OPBEANS_DOTNET_PORT:-3001}:80"
    container_name: opbeans-dotnet
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    environment:
      - ELASTIC_APM_SERVICE_NAME=${ELASTIC_APM_SERVICE_NAME:-opbeans-dotnet}
      - ELASTIC_APM_SERVER_URLS=${ELASTIC_APM_SERVER_URL:-http://apm-server:8200}
      - ELASTIC_APM_JS_SERVER_URL=${ELASTIC_APM_JS_SERVER_URL:-http://localhost:8200}
      - ELASTIC_APM_ENVIRONMENT=testing
      - ELASTIC_APM_LOG_FILE=stderr
      - ELASTIC_APM_LOG_LEVEL=debug
      - OTEL_RESOURCE_ATTRIBUTES=service.name=${ELASTIC_APM_SERVICE_NAME:-opbeans-dotnet},deployment.environment=production
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT:-http://apm-server:8200}
      - OTEL_EXPORTER_OTLP_PROTOCOL=${OTEL_EXPORTER_OTLP_PROTOCOL:-grpc}
      - APM_AGENT_TYPE=${APM_AGENT_TYPE:-elasticapm}
    depends_on:
      apm-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost"]
      retries: 10
      interval: 20s

  opbeans-node:
    build: opbeans-node
    ports:
      - "127.0.0.1:${OPBEANS_NODE_PORT:-3002}:3000"
    container_name: opbeans-node
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    environment:
      - ELASTIC_APM_SERVICE_NAME=${ELASTIC_APM_SERVICE_NAME:-opbeans-node}
      - ELASTIC_APM_SERVER_URL=${ELASTIC_APM_SERVER_URL:-http://apm-server:8200}
      - ELASTIC_APM_APPLICATION_PACKAGES=co.elastic.apm.opbeans
      - ELASTIC_APM_JS_SERVER_URL=${ELASTIC_APM_JS_SERVER_URL:-http://localhost:8200}
      - ELASTIC_APM_JS_SERVICE_NAME=${ELASTIC_APM_JS_SERVICE_NAME:-opbeans-react}
      - NODE_ENV=production
      - OPBEANS_SERVER_PORT=${OPBEANS_SERVER_PORT:-3000}
      - PGHOST=postgres
      - PGUSER=postgres
      - PGPASSWORD=hunter2
      - PGDATABASE=opbeans
      - REDIS_URL=redis://redis:6379
      - OTEL_RESOURCE_ATTRIBUTES=service.name=${ELASTIC_APM_SERVICE_NAME:-opbeans-node},deployment.environment=production
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT:-http://apm-server:8200}
      - OTEL_EXPORTER_OTLP_PROTOCOL=${OTEL_EXPORTER_OTLP_PROTOCOL:-grpc}
      - APM_AGENT_TYPE=${APM_AGENT_TYPE:-elasticapm}
    depends_on:
      apm-server:
        condition: service_healthy
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://opbeans-node:3000/"]
      interval: 10s
      retries: 10

  postgres:
      image: postgres:latest
      environment:
        - POSTGRES_PASSWORD=hunter2
        - POSTGRES_DB=opbeans
      volumes:
        - pgdata:/var/lib/postgresql/data
      ports:
        - "127.0.0.1:5432:5432"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        retries: 10
        interval: 10s

  redis:
    image: redis:4
    ports:
      - 6379:6379
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s

  wait:
    image: busybox
    depends_on:
      opbeans-node:
        condition: service_healthy

  loadPgData:
    image: node:12-bullseye
    environment:
      - PGHOST=postgres
      - PGUSER=postgres
      - PGPASSWORD=hunter2
      - PGDATABASE=opbeans
    logging:
      driver: 'json-file'
      options:
          max-size: '2m'
          max-file: '5'
    command: ["/bin/bash","-c","apt-get update && apt-get install -qq -y postgresql-client && npm install && npm run db-setup && node db/generate_orders.js 1000"]
    working_dir: /app
    volumes:
      - ./opbeans-node:/app
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  esdata:
    driver: local
  pgdata:
    driver: local
